// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bruno.Klir.Infrastructure.Configurations;

#nullable disable

namespace bruno.Klir.Infrastructure.Migrations
{
    [DbContext(typeof(KlirBrunoContext))]
    [Migration("20240605023920_initDb")]
    partial class initDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bruno.Klir.Domain.Aggregate.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PromotionId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("61420e17-37fb-4c34-9a5c-7bc45a75aa3e"),
                            IsActive = true,
                            Name = "Product A",
                            Price = 20.00m,
                            PromotionId = new Guid("ba35b678-9289-45ce-a601-80f59cec908e"),
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("c81102fd-f418-4497-bbbc-1d8bf677f9e8"),
                            IsActive = true,
                            Name = "Product B",
                            Price = 4.00m,
                            PromotionId = new Guid("47133cb6-1135-4d05-b44a-bdfe41eb1b45"),
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("b5b566ad-1406-4a58-a3a6-76318c60e0af"),
                            IsActive = true,
                            Name = "Product C",
                            Price = 2.00m,
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("431f430f-bb42-462f-9294-68488f0e31a4"),
                            IsActive = true,
                            Name = "Product D",
                            Price = 4.00m,
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("bruno.Klir.Domain.Product.Entities.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApplyAtEach")
                        .HasColumnType("int");

                    b.Property<int>("DiscountType")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPromotionActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Promotions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ba35b678-9289-45ce-a601-80f59cec908e"),
                            ApplyAtEach = 0,
                            DiscountType = 1,
                            DiscountValue = 0m,
                            IsPromotionActive = true,
                            Name = "Buy 1 Get 1 Free",
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("47133cb6-1135-4d05-b44a-bdfe41eb1b45"),
                            ApplyAtEach = 0,
                            DiscountType = 2,
                            DiscountValue = 0m,
                            IsPromotionActive = true,
                            Name = "3 for 10 Euro",
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("bruno.Klir.Domain.Product.Entities.ShoppingItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("PromotionApplied")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("ShoppingGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingGroupId");

                    b.ToTable("ShoppingItems", (string)null);
                });

            modelBuilder.Entity("bruno.Klir.Domain.Shopping.ShoppingGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Shopping", (string)null);
                });

            modelBuilder.Entity("bruno.Klir.Domain.Aggregate.Product", b =>
                {
                    b.HasOne("bruno.Klir.Domain.Product.Entities.Promotion", "Promotion")
                        .WithMany("Products")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("bruno.Klir.Domain.Product.Entities.ShoppingItem", b =>
                {
                    b.HasOne("bruno.Klir.Domain.Aggregate.Product", "Product")
                        .WithMany("Items")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("bruno.Klir.Domain.Shopping.ShoppingGroup", "ShoppingGroup")
                        .WithMany("Items")
                        .HasForeignKey("ShoppingGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingGroup");
                });

            modelBuilder.Entity("bruno.Klir.Domain.Aggregate.Product", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("bruno.Klir.Domain.Product.Entities.Promotion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("bruno.Klir.Domain.Shopping.ShoppingGroup", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
